#
# Application Environment Configuration
#
# IMPORTANT: If you intend to add or modify application environment variables,
# then you MUST consider the following.
#
# This example environment configuration should always work as-is. Any required
# variables should have a suitable default set here or fall back to a suitable
# default when interpreted in settings.py.
#
# Optional dependencies that require sensitive credentials like AWS Services,
# Mailgun, etc. should disabled by default. In some cases it is OK to share
# TEST credentials here for sake of convenience.
#
# Still, the app should 'gracefully degrade' whenever optional environment
# variables are disabled. For example, when AWS S3 storage is disabled, the
# bootstrapper app falls back to using the local file-based storage backend.
# When Mailgun is disabled, the app falls back to writing output emails to file.
#
# IMPORTANT: How to use this file.
#
#   1. Copy this file to the project's root directory as '.env'. The application
#      should read the .env file to load environment-specific configuration
#      and secrets.
#   2. NEVER add secrets to the .env.example file.
#   3. NEVER commit a .env file to version control (it is .gitignore'd)
#   4. Update .env.example whenever adding new configuration to the application,
#      involving credentials that should be kept secret.
#

#
# Secret Key
#
# (Required) Django uses the secret key to protect certain application
# secrets. Secret keys should not be used across environments, especially
# not in production. An example secret key is provided here for convenience
# in development.
#
SECRET_KEY = 'test'

#
# Environment Name
#
# (Required) The environment that the app is currently running in.
# The value can be one of: 'development', 'staging', 'production'.
#
ENVIRONMENT='development'

#
# Staff Configuration
#
# (Optional) Set the email of the {project_name_capitalcase} staff user who should receive emails.
#
STAFF_EMAIL='Pari Baker <pari@thinknimble.com>'
#
# Host Name Configuration
#
# (Required) The following setting must have a value
#
#     ALLOWED_HOSTS     A comma-separated list of valid hosts. Clients must make
#                           requests
#     CURRENT_DOMAIN    This will be the "primary" domain for the purpose of user-facing
#                           links, for example permalinks in emails or the user interface.
#                           If setting a custom value, this domain should also be included
#                           in the ALLOWED_HOSTS list.
#
#  (Optional)
#
#     CURRENT_PORT      The port linked to the 'primary' domain for the purpose of user-facing
#                           links.
#
ALLOWED_HOSTS='localhost,thinknimble.ngrok.io'
CURRENT_DOMAIN='localhost'
CURRENT_PORT='8080'

#
# Enable/Disable the Django Debug Feature
#
# (Required) Enables/disables the Django debug feature, which shows reports detailed
# exception information and stack traces to the client's browser, which is useful for
# debugging during development and testing. Note: DEBUG should NEVER be enabled in
# production environments, since it could leak user information or other application
# secrets.
#
DEBUG=True

#
# Database Configuration
#
# (Required in development, optional in staging and production) The application uses
# PostgreSQL as a database back end. The following settings are required to enable
# the application to access the database in development.
#
#     DB_NAME      The name of the PostgreSQL database.
#     DB_USER      The name of the user with permission to access the PostgreSQL database.
#     DB_PASS      The password of the user with permission to access the PostgreSQL database.
#     DB_HOST      The hostname where the database
#
# The app is designed to be hosted on Heroku in staging and production. In these
# environments, the database URL and credentials are automatically read from the
# Heroku environment, and so these settings are ignored.
#
DB_NAME='test'
DB_USER='test'
DB_PASS=''
DB_HOST='localhost'

#
# Rollbar Configuration
#
# (Optional) Exceptions can be sent to Rollbar, which helps track and organize
# error reports across environments. The following settings are optional:
#
#     USE_ROLLBAR              If 'True', exception reports will be logged to Rollbar, instead of
#                                  being mailed to admins (the default behavior).
#     ROLLBAR_ACCESS_TOKEN     Access token for the Rollbar API. Required if 'USE_ROLLBAR' is 'True'.
#
USE_ROLLBAR='False'
ROLLBAR_ACCESS_TOKEN=''

#
# Email Settings DETAILS CAN BE FOUND IN 1 PASSWORD
#
# (Optional) Set up a custom SMTP server for transactional emails. Emails will be logged to the
# console by default, which is usually fine for development purposes. We frequently use Mailgun.org's
# SMTP, and so the host and port name are provided by default. Alternatively, you can enable AWS
# Simple Email Service (SES). If AWS SES is enabled it will override any custom SMTP settings.
#
#     USE_CUSTOM_SMTP     True/False, use a custom SMTP server for email.
#     SMTP_USER           The username of the user authorized to use the SMTP server.
#     SMTP_PASSWORD       The password of the user authorized to use the SMTP server.
#     SMTP_HOST           Hostname to use when connecting to the SMTP server.
#     SMTP_PORT           Port to use when connecting to the SMTP server.
#
USE_CUSTOM_SMTP='False'
SMTP_USER=''
SMTP_USE_TLS=True
SMTP_PASSWORD=''
SMTP_HOST='smtp.mailgun.org'
SMTP_PORT='587'
SMTP_VALID_TESTING_DOMAINS='thinknimble.com'

#
# Enable/Disable AWS Services
#
# (Optional) Enable the AWS services this app should use
#
#     USE_AWS_STORAGE      If 'True', AWS S3 storage will be used as the application's storage
#                              backend. Valid IAM User credentials will also be required (see below).
#
USE_AWS_STORAGE='False'

#
# AWS S3 Storage Credentials DETAILS CAN BE FOUND IN 1 PASSWORD
#
# (Optional) The following settings only required if USE_AWS_STORAGE is set to 'True'.
#
#     AWS_ACCESS_KEY_ID          IAM User's Access Key from the AWS dashboard.
#     AWS_SECRET_ACCESS_KEY      IAM User's Secret Access Key from the AWS dashboard.
#     AWS_STORAGE_BUCKET_NAME    The name of the S3 bucket to use for storage.
#     AWS_LOCATION               Folder location inside of the S3 storage bucket.
#
AWS_ACCESS_KEY_ID=''
AWS_SECRET_ACCESS_KEY=''
AWS_STORAGE_BUCKET_NAME='tn-managr'
# staging
# prodution
# dev for aws_locations depending on env
AWS_LOCATION='dev'
AWS_LOCATION_DEV='dev'
AWS_LOCATION_STAGING='dev'
AWS_LOCATION_PROD='prod'

#
# Nylas Integration DETAILS CAN BE FOUND IN 1 PASSWORD
#
# (Optional) Enable/disable the Nylas integrations with the USE_NYLAS setting.
#            Credentials are only required if the integration is enabled. To
#            obtain credentials, log in to the Nylas dashboard and create a
#            new OAuth "application."
#
#     USE_NYLAS                   True/False, the Nylas integration should be enabled.
#     NYLAS_CLIENT_ID             Client ID for the OAuth application.
#     NYLAS_CLIENT_SECRET         Client Secret key for the OAuth application.
#     NYLAS_OAUTH_CALLBACK_URL    The Managr URL to hit after authorizing Nylas.
#
USE_NYLAS=False
NYLAS_CLIENT_ID=''
NYLAS_CLIENT_SECRET=''
NYLAS_OAUTH_CALLBACK_URL=http://localhost:8080/settings/integrations
#
#
#(Optional) Enable/Disable the Twilio integrations with the USE_TWILIO setting
#           Credentials are only required if the integration is enabled.
#           TO obtain credentials, log in to the Twilio dashboard
#           If in development make sure to use the testing key pair
#
#          USE_TWILIO=False
#          TWILIO_ACCOUNT_SID=
#          TWILIO_AUTH_TOKEN=
#          TWILIO_BASE_CALLBACK_URL=
#
#
#
USE_TWILIO=False
TWILIO_ACCOUNT_SID=''
TWILIO_AUTH_TOKEN=''
TWILIO_BASE_CALLBACK_URL=''
#
# Settings for Zoom Integration DETAILS IN 1 PASSWORD
#
#
#
#
#
USE_ZOOM=False

ZOOM_REDIRECT_URI=''
ZOOM_CLIENT_ID=''
ZOOM_SECRET=''
ZOOM_WEBHOOK_TOKEN=''
ZOOM_FAKE_MEETING_UUID=''

#
#
# SLACK SETTINGS DETAILS CAN BE FOUND IN 1 PASSWORD
#
#
#
#

USE_SLACK=False
SLACK_CLIENT_ID=''
SLACK_SECRET=''
SLACK_SIGNING_SECRET=''
SLACK_APP_VERSION=v0
###### test data for slack these are loaded into a fixture if the token is revoke this will not work

#
#
# SLACK SETTINGS DETAILS CAN BE FOUND IN 1 PASSWORD
#
#
#
#

USE_SALESFORCE=False
SALESFORCE_BASE_URL=''
SALESFORCE_CONSUMER_KEY=''
SALESFORCE_SECRET=''
SALESFORCE_SCOPES='id profile email address phone openid refresh_token web api'
SALESFORCE_REDIRECT_URI='settings/integrations'
SALESFORCE_API_VERSION=50.0
