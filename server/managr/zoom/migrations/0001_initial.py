# Generated by Django 2.2.17 on 2021-01-13 21:33

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organization', '0001_initial'),
        ('opportunity', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ZoomAuthAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('zoom_id', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=255)),
                ('type', models.PositiveSmallIntegerField()),
                ('role_name', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_meeting_url', models.CharField(max_length=255)),
                ('timezone', models.CharField(max_length=255)),
                ('verified', models.PositiveSmallIntegerField()),
                ('dept', models.CharField(blank=True, max_length=255, null=True)),
                ('pic_url', models.CharField(blank=True, max_length=255, null=True)),
                ('pmi', models.CharField(blank=True, help_text='personal meeting id', max_length=255, null=True)),
                ('use_pmi', models.BooleanField(default=False)),
                ('host_key', models.CharField(max_length=255)),
                ('jid', models.CharField(max_length=255)),
                ('account_id', models.CharField(max_length=255)),
                ('language', models.CharField(blank=True, max_length=150, null=True)),
                ('phone_country', models.CharField(blank=True, max_length=150, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(max_length=150)),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('token_generated_date', models.DateTimeField()),
                ('token_scope', models.CharField(blank=True, max_length=150, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='zoom_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-datetime_created'],
            },
        ),
        migrations.CreateModel(
            name='ZoomMeeting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.EmailField(blank=True, max_length=254, null=True)),
                ('meeting_id', models.CharField(help_text='Aka meeting number', max_length=255)),
                ('meeting_uuid', models.CharField(max_length=255, unique=True)),
                ('host_id', models.CharField(blank=True, max_length=255, null=True)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.PositiveSmallIntegerField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, help_text='Operation on all or single occurences', max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, max_length=255, null=True)),
                ('occurences', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(default=dict, max_length=128), blank=True, default=list, help_text='if recurring meeting', null=True, size=None)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('operator_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ENDED', 'Ended'), ('STARTED', 'Started'), ('WAITING', 'Waiting'), ('CREATED', 'Created'), ('DELETED', 'Deleted')], help_text='Status of the meeting, only takes 2 values and is supplied by retrieve from zoom', max_length=255, null=True)),
                ('start_url', models.CharField(blank=True, max_length=255, null=True)),
                ('join_url', models.CharField(blank=True, max_length=255, null=True)),
                ('recurrence', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(default=dict, max_length=128), blank=True, default=list, help_text='if recurring meeting', null=True, size=None)),
                ('should_track', models.CharField(choices=[('NO', 'No'), ('YES', 'Yes'), ('NOT_SELECTED', 'NOT_SELECTED')], default='NOT_SELECTED', help_text='FUTURE DEVELOPMENT', max_length=255)),
                ('notification_attempts', models.PositiveSmallIntegerField(default=0, help_text='We make an attempt immedietly and after 2 hours')),
                ('scoring_in_progress', models.BooleanField(default=False, help_text='if an event is emitted to generate a score dont do it again')),
                ('current_interaction', models.PositiveSmallIntegerField(default=1, help_text='current slack form')),
                ('is_closed', models.BooleanField(default=False, help_text='is closed is true when we expire attempts or a user has completed all steps')),
                ('latest_attempt', models.DateTimeField(auto_now_add=True, null=True)),
                ('interaction_status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('PARTIAL', 'Partial'), ('COMPLETE', 'Complete')], default='NOT_STARTED', max_length=255)),
                ('participants_count', models.SmallIntegerField(blank=True, null=True)),
                ('total_minutes', models.SmallIntegerField(blank=True, null=True)),
                ('meeting_score', models.SmallIntegerField(blank=True, null=True)),
                ('meeting_score_components', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('original_duration', models.SmallIntegerField(blank=True, help_text='Original duration is the duration sent from the meeting.end webhook, it is updated to the real duration when retrieving from the meetin endpoint so we save it for scoring', null=True)),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meetings', to='opportunity.Opportunity')),
                ('participants', models.ManyToManyField(related_name='meetings', to='organization.Contact')),
                ('zoom_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='zoom.ZoomAuthAccount')),
            ],
            options={
                'ordering': ['-datetime_created'],
            },
        ),
        migrations.CreateModel(
            name='MeetingReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('meeting_type', models.CharField(blank=True, help_text='The value must corespond to the values in the ActionChoice Model', max_length=255, null=True)),
                ('forecast_strength', models.CharField(blank=True, choices=[('OMITTED', 'Omitted'), ('PIPELINE', 'Pipeline'), ('BEST_CASE', 'Best Case'), ('COMMIT', 'Commit'), ('CLOSED', 'Closed')], max_length=255, null=True)),
                ('update_stage', models.CharField(blank=True, help_text='The values must correspond to the values in the Stage model and by Org', max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('next_steps', models.TextField(blank=True, help_text='populates secondary description', null=True)),
                ('sentiment', models.CharField(blank=True, choices=[('ZOOM_MEETING__GREAT', 'Great'), ('ZOOM_MEETING__NOT_WELL', 'Not Well'), ('ZOOM_MEETING__CANT_TELL', "Can't Tell")], max_length=255, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='This field is editable', max_digits=13, null=True)),
                ('prev_forecast', models.CharField(blank=True, choices=[('OMITTED', 'Omitted'), ('PIPELINE', 'Pipeline'), ('BEST_CASE', 'Best Case'), ('COMMIT', 'Commit'), ('CLOSED', 'Closed')], max_length=255, null=True)),
                ('prev_stage', models.CharField(blank=True, help_text='The values must correspond to the values in the Stage model and by Org', max_length=255, null=True)),
                ('prev_expected_close_date', models.DateTimeField(blank=True, null=True)),
                ('updated_close_date', models.DateTimeField(blank=True, null=True)),
                ('prev_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='This field is editable', max_digits=13, null=True)),
                ('meeting', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_review', to='zoom.ZoomMeeting')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
