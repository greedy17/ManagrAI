from django.conf import settings

from managr.utils.misc import get_site_url


USE_NYLAS = settings.USE_NYLAS
NYLAS_CLIENT_ID = settings.NYLAS_CLIENT_ID if USE_NYLAS else None
NYLAS_CLIENT_SECRET = settings.NYLAS_CLIENT_SECRET if USE_NYLAS else None
NYLAS_OAUTH_CALLBACK_URL = settings.NYLAS_OAUTH_CALLBACK_URL if USE_NYLAS else None
NYLAS_API_BASE_URL = "https://api.nylas.com"
EMAIL_AUTH_URI = "oauth/authorize"
EMAIL_AUTH_TOKEN_URI = "oauth/token"
EMAIL_AUTH_TOKEN_REVOKE_URI = "oauth/revoke"
EMAIL_ACCOUNT_URI = "account"
SEND_EMAIL_URI = "send"
CALENDAR_URI = "calendars"
EVENT_POST = "events"


# OAuth permission scopes to request from Nylas
SCOPE_EMAIL_CALENDAR = "calendar"


ALL_SCOPES = [SCOPE_EMAIL_CALENDAR]
ALL_SCOPES_STR = ", ".join(ALL_SCOPES)


def EMAIL_REVOKE_ALL_TOKENS_URI(account_id):
    return f"a/{NYLAS_CLIENT_ID}/accounts/{account_id}/revoke-all/"


ACCOUNT_TYPE_MANAGER = "MANAGER"
ACCOUNT_TYPE_REP = "REP"

USER_LEVEL_MANAGER = "MANAGER"
USER_LEVEL_REP = "REP"
USER_LEVEL_SDR = "SDR"

USER_LEVELS = (
    (USER_LEVEL_MANAGER, "Manager"),
    (USER_LEVEL_REP, "Rep"),
    (USER_LEVEL_SDR, "SDR"),
)

CRM_SALESFORCE = "SALESFORCE"
CRM_HUBSPOT = "HUBSPOT"

CRM_CHOICES = ((CRM_SALESFORCE, "Salesforce"), (CRM_HUBSPOT, "Hubspot"))

ACCOUNT_TYPES = (
    (ACCOUNT_TYPE_MANAGER, "MANAGER"),
    (ACCOUNT_TYPE_REP, "REP"),
)

STATE_ACTIVE = "ACTIVE"
STATE_INACTIVE = "INACTIVE"
STATE_INVITED = "INVITED"
STATE_CHOCIES = (
    (STATE_ACTIVE, "Active"),
    (STATE_INACTIVE, "Inactive"),
    (STATE_INVITED, "Invited"),
)


NYLAS_SYNC_STATUS_STOPPED = "stopped"
NYLAS_SYNC_STATUS_INVALID = "invalid"
NYLAS_SYNC_STATUS_SYNC_ERROR = "sync_error"
NYLAS_SYNC_STATUSES_FAILING = (
    NYLAS_SYNC_STATUS_STOPPED,
    NYLAS_SYNC_STATUS_INVALID,
    NYLAS_SYNC_STATUS_SYNC_ERROR,
)

NOTIFICATION_CLASS_ALERT = "ALERT"
NOTIFICATION_CLASS_EMAIL = "EMAIL"
NOTIFICATION_CLASS_SLACK = "SLACK"
NOTIFICATION_CLASS_CHOICES = (
    (NOTIFICATION_CLASS_ALERT, "ALERT",),
    (NOTIFICATION_CLASS_EMAIL, "EMAIL",),
    (NOTIFICATION_CLASS_SLACK, "SLACK",),
)


NOTIFICATION_RESOURCE_ACCOUNT = "ACCOUNT"
NOTIFICATION_RESOURCE_ORGANIZATION = "ORGANIZATION"

NOTIFICATION_RESOURCE_REPORT = "REPORT"
NOTIFICATION_RESOURCE_OPPORTUNITY = "OPPORTUNITY"
NOTIFICATION_RESOURCE_USER = "USER"
NOTIFICATION_RESOURCES = (
    (NOTIFICATION_RESOURCE_ACCOUNT, "Account",),
    (NOTIFICATION_RESOURCE_ORGANIZATION, "Organization"),
    (NOTIFICATION_RESOURCE_REPORT, "Report"),
    (NOTIFICATION_RESOURCE_OPPORTUNITY, "Opportunity"),
)

NOTIFICATION_OPTION_KEY_OPPORTUNITY_EMAIL_RECEIVED = "OPPORTUNITY_EMAIL_RECEIVED"
NOTIFICATION_OPTION_KEY_ORGANIZATION_STAGES = "ORGANIZATION_STAGES_UPDATE"
NOTIFICATION_OPTION_KEY_REPORT_GENERATED = "REPORT_GENERATED"
NOTIFICATION_OPTION_KEY_USER_UPDATE = "USER_UPDATE"
NOTIFICATION_OPTION_KEY_OPPORTUNITY_TEXT_RECEIVED = "OPPORTUNITY_TEXT_RECEIVED"
NOTIFICATION_OPTION_KEY_OPPORTUNITY_REMINDER = "OPPORTUNITY_REMINDER"
NOTIFICATION_OPTION_KEY_OPPORTUNITY_STALLED_IN_STAGE = "OPPORTUNITY_STALLED_IN_STAGE"
NOTIFICATION_OPTION_KEY_OPPORTUNITY_INACTIVE_90_DAYS = "OPPORTUNITY_INACTIVE_90_DAYS"
NOTIFICATION_OPTION_KEY_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_1_DAY = (
    "OPPORTUNITY_LAPSED_CLOSE_DATE_1_DAY"
)
NOTIFICATION_OPTION_KEY_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_14_DAYS = (
    "OPPORTUNITY_LAPSED_CLOSE_DATE_14_DAYS"
)
NOTIFICATION_OPTION_KEY_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_30_DAYS = (
    "OPPORTUNITY_LAPSED_CLOSE_DATE_30_DAYS"
)
NOTIFICATION_OPTION_KEY_OPPORTUNITY_EMAIL_RECEIVED_ID = "004c41a0-11c2-4b33-bcec-4e10518d2fa3"


#### constants for testing grabbing id's from fixtures
NOTIFICATION_OPTION_STALLED_IN_STAGE_ID = "f9cc3934-f82b-442f-9d63-73de73d5d115"
NOTIFICATION_OPTION_INACTIVE_ID = "845c1d76-8743-4695-b6cf-9af7b0aaab14"
NOTIFICATION_OPTION_LAPSED_1_DAY_ID = "5d19b999-c0bf-429a-a8f5-17b9bc2efdc6"
NOTIFICATION_OPTION_LAPSED_14_DAYS_ID = "2bcddc82-305b-42a8-a295-99b76f418aac"
NOTIFICATION_OPTION_LAPSED_30_DAYS_ID = "0285c84d-10c5-41d8-8a97-d944cc373ad6"
NOTIFICATION_OPTION_STAGE_UPDATE_ID = "0e0a1e9d-f806-4807-8d09-58e90346edff"


NOTIFICATION_TYPE_REMINDER = "REMINDER"
NOTIFICATION_TYPE_EMAIL = "EMAIL"
NOTIFICATION_TYPE_SYSTEM = "SYSTEM"
NOTIFICATION_TYPE_OPPORTUNITY_STALLED_IN_STAGE = "OPPORTUNITY.STALLED_IN_STAGE"
NOTIFICATION_TYPE_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_1 = (
    "OPPORTUNITY.LAPSED_EXPECTED_CLOSE_DATE_1"
)
NOTIFICATION_TYPE_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_14 = (
    "OPPORTUNITY.LAPSED_EXPECTED_CLOSE_DATE_14"
)
NOTIFICATION_TYPE_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_30 = (
    "OPPORTUNITY.LAPSED_EXPECTED_CLOSE_DATE_30"
)
NOTIFICATION_TYPE_OPPORTUNITY_INACTIVE = "OPPORTUNITY.INACTIVE"
NOTIFICATION_TYPE_EMAIL_OPENED = "EMAIL_OPENED"
NOTIFICATION_TYPE_CHOICES = (
    (NOTIFICATION_TYPE_REMINDER, "Reminder"),
    (NOTIFICATION_TYPE_EMAIL, "Email"),
    (NOTIFICATION_TYPE_SYSTEM, "System"),
    (NOTIFICATION_TYPE_EMAIL_OPENED, "Email Opened"),
    (NOTIFICATION_TYPE_OPPORTUNITY_INACTIVE, "Opportunity Inactive"),
    (NOTIFICATION_TYPE_OPPORTUNITY_STALLED_IN_STAGE, "Opportunity Stalled in Stage"),
    (
        NOTIFICATION_TYPE_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_1,
        "Opportunity Lapsed Expected Close Date By 1 day or more",
    ),
    (
        NOTIFICATION_TYPE_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_14,
        "Opportunity Lapsed Expected Close Date By 14 days or more",
    ),
    (
        NOTIFICATION_TYPE_OPPORTUNITY_LAPSED_EXPECTED_CLOSE_DATE_30,
        "Opportunity Lapsed Expected Close Date By 30 days or more",
    ),
)


NOTIFICATION_ACTION_SNOOZE = "SNOOZE"
NOTIFICATION_ACTION_VIEWED = "VIEWED"
NOTIFICATION_ACTION_CHOICES = (
    (NOTIFICATION_ACTION_SNOOZE, "Snooze"),
    (NOTIFICATION_ACTION_VIEWED, "Viewed"),
)

WORKFLOW_REMINDER = "WORKFLOW_REMINDER"
REMINDER_MESSAGE_REP = "REMINDER_MESSAGE_REP"
REMINDER_MESSAGE_MANAGER = "REMINDER_MESSAGE_MANAGER"
CALENDAR_REMINDER = "CALENDAR_REMINDER"
MORNING_DIGEST = "MORNING_DIGEST"
NON_ZOOM_MEETINGS = "NON_ZOOM_MEETINGS"
CALENDAR_CHECK = "CALENDAR_CHECK"
WORKFLOW_CONFIG_CHECK = "WORKFLOW_CONFIG_CHECK"
MORNING_REFRESH = "MORNING_REFRESH"
# These times should be a half hour before the intended time
REMINDER_CONFIG = {
    WORKFLOW_REMINDER: {"HOUR": 7, "MINUTE": 00},
    MORNING_DIGEST: {"HOUR": 7, "MINUTE": 30},
    REMINDER_MESSAGE_REP: {"HOUR": 17, "MINUTE": 30},
    REMINDER_MESSAGE_MANAGER: {"HOUR": 18, "MINUTE": 00},
}

TIMEZONE_TASK_TIMES = {
    NON_ZOOM_MEETINGS: {"HOUR": 7, "MINUTE": 30},
    CALENDAR_CHECK: {"HOUR": 5, "MINUTE": 30},
    # WORKFLOW_CONFIG_CHECK: {"HOUR": 23, "MINUTE": 00},
    # MORNING_REFRESH: {"HOUR": 7, "MINUTE": 30},
}


def REMINDERS():
    return {
        WORKFLOW_REMINDER: True,
        MORNING_DIGEST: False,
        REMINDER_MESSAGE_REP: True,
        REMINDER_MESSAGE_MANAGER: True,
    }
