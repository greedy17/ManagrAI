# Ignore local environment configuration files
.env
client/.env.*

# Ignore local git directory
.git/

# Ignore compiled Python
*.pyc
__pycache__/

# Ignore editor directories
.vscode/

# Ignore the top directory package-lock.json
package-lock.json

# Ignore local static files and media
server/static-files/
server/media-files/
server/scrapy_cache/
node_modules/
logs/

# Ignore npm error logs
npm-debug.log*

# Ignore thumbnail files on OSX
.DS_Store

# Ignore built and static files
server/static
client/dist

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
*.tfvars
!sample.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
