{
  "taskDefinition": {
    "taskDefinitionArn": "arn:aws:ecs:<aws_region>:<aws_account>:task-definition/managr-app-task:28",
    "containerDefinitions": [
      {
        "name": "managr-app-proxy",
        "image": "nginx",
        "cpu": 0,
        "portMappings": [
          {
            "containerPort": 80,
            "hostPort": 80,
            "protocol": "tcp"
          }
        ],
        "essential": true,
        "environment": [],
        "mountPoints": [
          {
            "sourceVolume": "nginx-conf-vol",
            "containerPath": "/etc/nginx"
          }
        ],
        "volumesFrom": [],
        "dependsOn": [
          {
            "containerName": "managr-app",
            "condition": "START"
          },
          {
            "containerName": "nginx-config",
            "condition": "COMPLETE"
          }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/managr-app",
            "awslogs-region": "<aws_region>",
            "awslogs-stream-prefix": "ecs"
          }
        }
      },
      {
        "name": "nginx-config",
        "image": "bash",
        "cpu": 0,
        "portMappings": [],
        "essential": false,
        "command": [
          "-c",
          "echo $DATA | base64 -d - | tee /etc/nginx/nginx.conf"
        ],
        "environment": [
          {
            "name": "DATA",
            "value": "IyMgRGVueSBhY2Nlc3MgdG8gYW55IG90aGVyIGhvc3QKI3NlcnZlciB7CiMgICAgbGlzdGVuIDgwOwojICAgIHNlcnZlcl9uYW1lIF8gZGVmYXVsdDsKIyAgICByZXR1cm4gNDQ0OwojfQoKZXZlbnRzIHsKICAgIHdvcmtlcl9jb25uZWN0aW9ucyAgMTAyNDsKfQoKaHR0cCB7CiAgICBpbmNsdWRlIC9ldGMvbmdpbngvc2l0ZXMtZW5hYmxlZC8qOwoKICAgICMgVGhlIERqYW5nbyBBcHBsaWNhdGlvbgogICAgdXBzdHJlYW0gbWFuYWdyLWRqYW5nbyB7CiAgICAgICAgc2VydmVyIDEyNy4wLjAuMTo4MDAwOwogICAgfQoKICAgIHVwc3RyZWFtIG1hbmFnci13ZWJzb2NrZXRzIHsKICAgICAgICBzZXJ2ZXIgMTI3LjAuMC4xOjgwMDE7CiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBsaXN0ZW4gICA4MCBkZWZhdWx0X3NlcnZlcjsKICAgICAgICBzZXJ2ZXJfbmFtZSBtYW5hZ3ItbG9hZC1iYWxhbmNlci0xMjE2OTY0MTgudXMtZWFzdC0yLmVsYi5hbWF6b25hd3MuY29tOwogICAgICAgIHNzaSAgICAgIG9uOwoKICAgICAgICAjIFNldCB1cCBIVFRQIFN0cmljdCBUcmFuc3BvcnQgU2VjdXJpdHkgKEhTVFMpIHdpdGggYSAxLWRheSBsaWZlc3BhbgogICAgICAgICMgYWRkX2hlYWRlciBTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5ICJtYXgtYWdlPTE3MjgwMDAwOyBpbmNsdWRlU3ViZG9tYWlucyI7CgogICAgICAgIGxvY2F0aW9uIC9oZWFsdGgtY2hlY2sgewogICAgICAgICAgICBhY2Nlc3NfbG9nIG9mZjsKICAgICAgICAgICAgcmV0dXJuIDIwMCAiaGVhbHRoeVxuIjsKICAgICAgICB9CgogICAgICAgICMgUmVkaXJlY3QgaW5zZWN1cmUgdHJhZmZpYyB0byBodHRwcy4gVGhlIGxvYWQgYmFsYW5jZXIgd2lsbAogICAgICAgICMgc2V0IHRoZSBYLUZvcndhcmRlZC1Qcm90byBoZWFkZXIgdG8gbGV0IHVzIGtub3cgaWYgdGhlIGluY29taW5nCiAgICAgICAgIyByZXF1ZXN0IHdhcyBzZWN1cmUgb3IgaW5zZWN1cmUuCiAgICAgICAgIyBpZiAoJGh0dHBfeF9mb3J3YXJkZWRfcHJvdG8gIT0gImh0dHBzIikgewogICAgICAgICMgICAgIHJldHVybiAzMDIgaHR0cDovL21hbmFnci1sb2FkLWJhbGFuY2VyLTEyMTY5NjQxOC51cy1lYXN0LTIuZWxiLmFtYXpvbmF3cy5jb206ODAwMCRyZXF1ZXN0X3VyaTsKICAgICAgICAjIH0KCiAgICAgICAgIyBUaGlzIGlzIE5FQ0VTU0FSWSB0byBtYWtlIHN1cmUgYXBwbGljYXRpb24gcmVkaXJlY3RzCiAgICAgICAgIyBwb2ludCB0byBodHRwcyBhbmQgbm90IGh0dHAKICAgICAgICAjIHByb3h5X3NldF9oZWFkZXIgWC1Gb3J3YXJkZWQtUHJvdG8gaHR0cHM7CgogICAgICAgICMgZ3ppcCBzZXR0aW5ncwogICAgICAgIGd6aXAgb247CiAgICAgICAgZ3ppcF9jb21wX2xldmVsIDY7CiAgICAgICAgZ3ppcF9kaXNhYmxlICJtc2llNiI7CiAgICAgICAgZ3ppcF9taW5fbGVuZ3RoIDIwMDsKICAgICAgICAjCiAgICAgICAgcHJveHlfcGFzc19oZWFkZXIgU2VydmVyOwogICAgICAgIHByb3h5X3NldF9oZWFkZXIgTmdpbngtU1NJIG9uOwogICAgICAgIHByb3h5X3NldF9oZWFkZXIgSG9zdCAkaHR0cF9ob3N0OwogICAgICAgIHByb3h5X3NldF9oZWFkZXIgWC1SZWFsLUlQICRyZW1vdGVfYWRkcjsKICAgICAgICBwcm94eV9zZXRfaGVhZGVyIFgtU2NoZW1lICRzY2hlbWU7CiAgICAgICAgcHJveHlfY29ubmVjdF90aW1lb3V0IDIwczsKICAgICAgICBwcm94eV9yZWFkX3RpbWVvdXQgMjBzOwogICAgICAgIHByb3h5X3JlZGlyZWN0IG9mZjsKICAgICAgICBwcm94eV9pbnRlcmNlcHRfZXJyb3JzIG9uOwogICAgICAgICMKICAgICAgICBhY2Nlc3NfbG9nIC92YXIvbG9nL25naW54L2FjY2Vzcy5sb2c7CiAgICAgICAgZXJyb3JfbG9nIC92YXIvbG9nL25naW54L2Vycm9yLmxvZzsKICAgICAgICAjCiAgICAgICAgY2xpZW50X21heF9ib2R5X3NpemUgMjBtOwoKICAgICAgICAjIyBUT0RPIERlbnkgaWxsZWdhbCBIb3N0IGhlYWRlcnMKICAgICAgICAjaWYgKCRob3N0ICF+KiBeKGFwcC5tYW5hZ3IuYWkpJCApIHsKICAgICAgICAjICAgIHJldHVybiA0NDQ7CiAgICAgICAgI30KCiAgICAgICAgIyBUT0RPIG1haW50ZW5hbmNlIHNjcmVlbiBsb2NhdGlvbgogICAgICAgICNsb2NhdGlvbiAvIHsKICAgICAgICAjICAgIGFsaWFzIC9vcHQvbWFuYWdyL3NlcnZlci90ZW1wbGF0ZXMvNTAzLmh0bWw7CiAgICAgICAgI30KCiAgICAgICAgbG9jYXRpb24gL3pvb212ZXJpZnkvdmVyaWZ5em9vbS5odG1sIHsKICAgICAgICAgICAgcmV0dXJuIDIwMCAiNzYyMmU2NDViNmViNGQwZjg3N2QyMmJmOWVhOTdiOTEiOwogICAgICAgIH0KCiAgICAgICAgbG9jYXRpb24gL3dzLyB7CiAgICAgICAgICAgIHRyeV9maWxlcyAkdXJpIEBwcm94eV90b193czsKICAgICAgICB9CgogICAgICAgIGxvY2F0aW9uIEBwcm94eV90b193cyB7CiAgICAgICAgICAgIHByb3h5X2h0dHBfdmVyc2lvbiAxLjE7CiAgICAgICAgICAgIHByb3h5X3NldF9oZWFkZXIgVXBncmFkZSAkaHR0cF91cGdyYWRlOwogICAgICAgICAgICBwcm94eV9zZXRfaGVhZGVyIENvbm5lY3Rpb24gInVwZ3JhZGUiOwogICAgICAgICAgICBwcm94eV9yZWRpcmVjdCBvZmY7CgogICAgICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9tYW5hZ3Itd2Vic29ja2V0czsKICAgICAgICB9CgogICAgICAgICMgbG9jYXRpb24gL3N0YXRpYy8gewogICAgICAgICMgICAgIGFsaWFzIC9vcHQvbWFuYWdyL3NlcnZlci9zdGF0aWMvOwogICAgICAgICMgICAgIGFjY2Vzc19sb2cgb2ZmOwogICAgICAgICMgICAgIGxvZ19ub3RfZm91bmQgb247CiAgICAgICAgIyAgICAgZXhwaXJlcyAzMGQ7CiAgICAgICAgIyAgICAgYWRkX2hlYWRlciBQcmFnbWEgcHVibGljOwogICAgICAgICMgICAgIGFkZF9oZWFkZXIgQ2FjaGUtQ29udHJvbCAicHVibGljIjsKICAgICAgICAjIH0KCiAgICAgICAgIyBUT0RPOiBQcm9iYWJseSBub3QgbmVjZXNzYXJ5LCBzaW5jZSBtZWRpYSBmaWxlcyBhcmUgb24gUzMKICAgICAgICAjbG9jYXRpb24gL21lZGlhLyB7CiAgICAgICAgIyAgICBhbGlhcyAvb3B0L21hbmFnci9zZXJ2ZXIvbWVkaWFmaWxlcy87CiAgICAgICAgIyAgICBhY2Nlc3NfbG9nIG9mZjsKICAgICAgICAjICAgIGxvZ19ub3RfZm91bmQgb247CiAgICAgICAgI30KCiAgICAgICAgIyBUT0RPOiBBZGQgcm9ib3RzLnR4dAogICAgICAgICNsb2NhdGlvbiAvcm9ib3RzLnR4dCB7CiAgICAgICAgIyAgICBhbGlhcyAvb3B0L21hbmFnci8uLi47CiAgICAgICAgIyAgICBsb2dfbm90X2ZvdW5kIG9uOwogICAgICAgICN9CgogICAgICAgIGxvY2F0aW9uIC9hcGkvIHsKICAgICAgICAgICAgIyBwcmV2ZW50IHRoZSBicm93c2VyIGZyb20gY2FjaGluZyBhcGkgcmVzcG9uc2VzCiAgICAgICAgICAgIGV4cGlyZXMgLTE7CiAgICAgICAgICAgIGFkZF9oZWFkZXIgQ2FjaGUtQ29udHJvbCAibm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUiOwogICAgICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9tYW5hZ3ItZGphbmdvOwogICAgICAgICAgICBlcnJvcl9wYWdlIDQwNCA1MDIgNDEzID0gQGNhY2hlX21pc3M7CiAgICAgICAgfQoKICAgICAgICByZXdyaXRlIF4vKGFkbWluKSQgaHR0cDovLyRodHRwX2hvc3QvJDEvIHBlcm1hbmVudDsKCiAgICAgICAgbG9jYXRpb24gXn4gL2FkbWluLyB7CiAgICAgICAgICAgIHByb3h5X3Bhc3MgaHR0cDovL21hbmFnci1kamFuZ287CiAgICAgICAgICAgIGFsbG93ICBhbGw7CiAgICAgICAgICAgIGRlbnkgICBhbGw7CiAgICAgICAgfQoKICAgICAgICBsb2NhdGlvbiA9IC9mYXZpY29uLmljbyB7IGFjY2Vzc19sb2cgb2ZmOyBsb2dfbm90X2ZvdW5kIG9uOyB9CgogICAgICAgIGxvY2F0aW9uIH4gL1wuICAgICAgICAgIHsgYWNjZXNzX2xvZyBvZmY7IGxvZ19ub3RfZm91bmQgb2ZmOyBkZW55IGFsbDsgfQoKICAgICAgICBsb2NhdGlvbiAvIHsKICAgICAgICAgICAgIyBVbmNvbW1lbnQgdGhlIGxpbmVzIGJlbG93IHRvIGFjdGl2YXRlICdtYWludGVuYW5jZSBtb2RlJwogICAgICAgICAgICAjIFJlZGlyZWN0IGV2ZXJ5b25lIGV4Y2VwdCB0aGUgSVAgYmVsb3cgdG8gYSA1MDMgZXJyb3IKICAgICAgICAgICAgIyNpZiAoJHJlbW90ZV9hZGRyICE9ICIxMDcuMjA2LjE3Ni4xOTQiKSB7CiAgICAgICAgICAgICMjICAgIHJldHVybiA1MDM7CiAgICAgICAgICAgICMjfQoKICAgICAgICAgICAgIyBQYXNzIHByb3h5IGFuZCByZXBvcnQgdXNlcidzIElQIGFkZHJlc3MgdG8gRGphbmdvCiAgICAgICAgICAgIHByb3h5X3Bhc3MgaHR0cDovL21hbmFnci1kamFuZ287CiAgICAgICAgICAgIHByb3h5X3NldF9oZWFkZXIgICAgSG9zdCAkaG9zdDsKICAgICAgICAgICAgcHJveHlfc2V0X2hlYWRlciAgICBYLVJlYWwtSVAgJHJlbW90ZV9hZGRyOwogICAgICAgICAgICBwcm94eV9zZXRfaGVhZGVyICAgIFgtRm9yd2FyZGVkLUZvciAkcHJveHlfYWRkX3hfZm9yd2FyZGVkX2ZvcjsKCiAgICAgICAgICAgIGVycm9yX3BhZ2UgNDA0IDUwMiA0MTMgPSBAY2FjaGVfbWlzczsKICAgICAgICAgICAgZXJyb3JfcGFnZSA1MDMgLzUwMy5odG1sOwogICAgICAgIH0KCiAgICAgICAgbG9jYXRpb24gQGNhY2hlX21pc3MgewogICAgICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9tYW5hZ3ItZGphbmdvOwogICAgICAgIH0KCiAgICAgICAgIyB3aGF0IHRvIHNlcnZlIGlmIHVwc3RyZWFtIGlzIG5vdCBhdmFpbGFibGUgb3IgY3Jhc2hlcwogICAgICAgIGVycm9yX3BhZ2UgNTAwIDUwMiA1MDMgNTA0IC81MHg7CiAgICB9Cn0K"
          }
        ],
        "mountPoints": [
          {
            "sourceVolume": "nginx-conf-vol",
            "containerPath": "/etc/nginx"
          }
        ],
        "volumesFrom": [],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/managr-app",
            "awslogs-region": "<aws_region>",
            "awslogs-stream-prefix": "ecs"
          }
        }
      },
      {
        "name": "managr-app",
        "image": "<aws_account>.dkr.ecr.<aws_region>.amazonaws.com/thinknimble/managr/server:latest",
        "cpu": 1024,
        "memory": 2048,
        "portMappings": [
          {
            "containerPort": 8000,
            "hostPort": 8000,
            "protocol": "tcp"
          }
        ],
        "essential": true,
        "environment": [
          {
            "name": "SMTP_USE_TLS",
            "value": "True"
          },
          {
            "name": "USE_SALESFORCE",
            "value": "True"
          },
          {
            "name": "USE_SLACK",
            "value": "True"
          },
          {
            "name": "USE_NYLAS",
            "value": "True"
          },
          {
            "name": "USE_AWS_STORAGE",
            "value": "True"
          },
          {
            "name": "USE_ZOOM",
            "value": "True"
          },
          {
            "name": "AWS_LOCATION",
            "value": "dev"
          },
          {
            "name": "CURRENT_PORT",
            "value": "8000"
          },
          {
            "name": "TEST_SLACK",
            "value": "False"
          },
          {
            "name": "DD_PROFILING_ENABLED",
            "value": "true"
          },
          {
            "name": "DEBUG",
            "value": "True"
          },
          {
            "name": "USE_CUSTOM_SMTP",
            "value": "True"
          },
          {
            "name": "AWS_LOCATION_PROD",
            "value": "prod"
          },
          {
            "name": "SMTP_PORT",
            "value": "587"
          },
          {
            "name": "USE_TWILIO",
            "value": "True"
          },
          {
            "name": "AWS_LOCATION_DEV",
            "value": "dev"
          },
          {
            "name": "ALLOWED_HOSTS",
            "value": "*"
          },
          {
            "name": "DD_SERVICE",
            "value": "managr-server"
          },
          {
            "name": "CURRENT_DOMAIN",
            "value": "managr-load-balancer-121696418.<aws_region>.elb.amazonaws.com"
          },
          {
            "name": "DD_ENV",
            "value": "fargate"
          },
          {
            "name": "SMTP_VALID_TESTING_DOMAINS",
            "value": "thinknimble.com"
          },
          {
            "name": "AWS_LOCATION_STAGING",
            "value": "dev"
          },
          {
            "name": "USE_ROLLBAR",
            "value": "False"
          }
        ],
        "mountPoints": [],
        "volumesFrom": [],
        "secrets": [
          {
            "name": "SECRET_KEY",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:secretKey::"
          },
          {
            "name": "STAFF_EMAIL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:staffEmail::"
          },
          {
            "name": "DB_HOST",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbHost::"
          },
          {
            "name": "DB_USER",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbUser::"
          },
          {
            "name": "DB_PASS",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbPass::"
          },
          {
            "name": "DB_NAME",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbName::"
          },
          {
            "name": "ROLLBAR_ACCESS_TOKEN",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:rollbarAccessToken::"
          },
          {
            "name": "SMTP_USER",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:smtpUser::"
          },
          {
            "name": "SMTP_PASSWORD",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:smtpPassword::"
          },
          {
            "name": "SMTP_HOST",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:smtpHost::"
          },
          {
            "name": "AWS_ACCESS_KEY_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:awsAccessKeyId::"
          },
          {
            "name": "AWS_SECRET_ACCESS_KEY",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:awsSecretAccessKey::"
          },
          {
            "name": "AWS_STORAGE_BUCKET_NAME",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:awsStorageBucketName::"
          },
          {
            "name": "NYLAS_CLIENT_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:nylasClientId::"
          },
          {
            "name": "NYLAS_CLIENT_SECRET",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:nylasClientSecret::"
          },
          {
            "name": "NYLAS_OAUTH_CALLBACK_URL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:nylasOauthCallbackUrl::"
          },
          {
            "name": "TWILIO_ACCOUNT_SID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:twilioAccountSid::"
          },
          {
            "name": "TWILIO_AUTH_TOKEN",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:twilioAuthToken::"
          },
          {
            "name": "TWILIO_BASE_CALLBACK_URL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:twilioBaseCallbackUrl::"
          },
          {
            "name": "ZOOM_REDIRECT_URI",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:zoomRedirectUri::"
          },
          {
            "name": "ZOOM_CLIENT_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:zoomClientId::"
          },
          {
            "name": "ZOOM_SECRET",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:zoomSecret::"
          },
          {
            "name": "ZOOM_WEBHOOK_TOKEN",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:zoomWebhookToken::"
          },
          {
            "name": "ZOOM_FAKE_MEETING_UUID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:zoomFakeMeetingUuid::"
          },
          {
            "name": "SLACK_CLIENT_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackClientId::"
          },
          {
            "name": "SLACK_SECRET",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackSecret::"
          },
          {
            "name": "SLACK_SIGNING_SECRET",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackSigningSecret::"
          },
          {
            "name": "SLACK_APP_VERSION",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackAppVersion::"
          },
          {
            "name": "SLACK_TEST_TEAM_NAME",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestTeamName::"
          },
          {
            "name": "SLACK_TEST_TEAM_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestTeamId::"
          },
          {
            "name": "SLACK_TEST_BOT_USER_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestBotUserId::"
          },
          {
            "name": "SLACK_TEST_ACCESS_TOKEN",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestAccessToken::"
          },
          {
            "name": "SLACK_TEST_INCOMING_WEBHOOK_URL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestIncomingWebhookUrl::"
          },
          {
            "name": "SLACK_TEST_INCOMING_WEBHOOK_CHANNEL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestIncomingWebhookChannel::"
          },
          {
            "name": "SLACK_TEST_INCOMING_WEBHOOK_CHANNEL_ID",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestIncomingWebhookChannelId::"
          },
          {
            "name": "SLACK_TEST_INCOMING_WEBHOOK_CONFIGURATION_URL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:slackTestIncomingWebhookConfigurationUrl::"
          },
          {
            "name": "SALESFORCE_BASE_URL",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:salesforceBaseUrl::"
          },
          {
            "name": "SALESFORCE_CONSUMER_KEY",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:salesforceConsumerKey::"
          },
          {
            "name": "SALESFORCE_SECRET",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:salesforceSecret::"
          },
          {
            "name": "SALESFORCE_SCOPES",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:salesforceScopes::"
          },
          {
            "name": "SALESFORCE_REDIRECT_URI",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:salesforceRedirectUri::"
          },
          {
            "name": "SALESFORCE_API_VERSION",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:salesforceApiVersion::"
          }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/managr-app",
            "awslogs-region": "<aws_region>",
            "awslogs-stream-prefix": "ecs"
          }
        }
      },
      {
        "name": "managr-app-worker",
        "image": "<aws_account>.dkr.ecr.<aws_region>.amazonaws.com/thinknimble/managr/server:latest",
        "cpu": 0,
        "portMappings": [
          {
            "containerPort": 8001,
            "hostPort": 8001,
            "protocol": "tcp"
          }
        ],
        "essential": true,
        "entryPoint": [
          "ddtrace-run",
          "python3",
          "server/manage.py",
          "process_tasks"
        ],
        "environment": [
          {
            "name": "DD_SERVICE",
            "value": "managr-server-worker"
          },
          {
            "name": "DD_ENV",
            "value": "fargate"
          },
          {
            "name": "DD_PROFILING_ENABLED",
            "value": "true"
          }
        ],
        "mountPoints": [],
        "volumesFrom": [],
        "secrets": [
          {
            "name": "DB_HOST",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbHost::"
          },
          {
            "name": "DB_USER",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbUser::"
          },
          {
            "name": "DB_PASS",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbPass::"
          },
          {
            "name": "DB_NAME",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbName::"
          }
        ],
        "dependsOn": [
          {
            "containerName": "managr-app",
            "condition": "START"
          }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/managr-app",
            "awslogs-region": "<aws_region>",
            "awslogs-stream-prefix": "ecs"
          }
        }
      },
      {
        "name": "managr-app-scheduled-tasks",
        "image": "<aws_account>.dkr.ecr.<aws_region>.amazonaws.com/thinknimble/managr/server-tasks:latest",
        "cpu": 0,
        "portMappings": [],
        "essential": true,
        "environment": [
          {
            "name": "DD_SERVICE",
            "value": "managr-server-scheduled-tasks"
          },
          {
            "name": "DD_ENV",
            "value": "fargate"
          },
          {
            "name": "DD_PROFILING_ENABLED",
            "value": "true"
          }
        ],
        "mountPoints": [],
        "volumesFrom": [],
        "secrets": [
          {
            "name": "DB_HOST",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbHost::"
          },
          {
            "name": "DB_USER",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbUser::"
          },
          {
            "name": "DB_PASS",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbPass::"
          },
          {
            "name": "DB_NAME",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:dbName::"
          }
        ],
        "dependsOn": [
          {
            "containerName": "managr-app",
            "condition": "START"
          }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/managr-app",
            "awslogs-region": "<aws_region>",
            "awslogs-stream-prefix": "ecs"
          }
        }
      },
      {
        "name": "datadog-agent",
        "image": "datadog/agent:latest",
        "cpu": 0,
        "portMappings": [
          {
            "containerPort": 8126,
            "hostPort": 8126,
            "protocol": "tcp"
          }
        ],
        "essential": true,
        "environment": [
          {
            "name": "ECS_FARGATE",
            "value": "true"
          },
          {
            "name": "DD_APM_ENABLED",
            "value": "true"
          },
          {
            "name": "DD_APM_NON_LOCAL_TRAFFIC",
            "value": "true"
          },
          {
            "name": "DD_TAGS",
            "value": "env:fargate"
          }
        ],
        "mountPoints": [],
        "volumesFrom": [],
        "secrets": [
          {
            "name": "DD_API_KEY",
            "valueFrom": "arn:aws:secretsmanager:<aws_region>:<aws_account>:secret:<aws_secretsmanager_secret_id>:ddApiKey::"
          }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/managr-app",
            "awslogs-region": "<aws_region>",
            "awslogs-stream-prefix": "ecs"
          }
        }
      }
    ],
    "family": "managr-app-task",
    "executionRoleArn": "arn:aws:iam::<aws_account>:role/ManagrEcsTaskExecutionRole",
    "networkMode": "awsvpc",
    "revision": 28,
    "volumes": [
      {
        "name": "nginx-conf-vol",
        "host": {}
      }
    ],
    "status": "ACTIVE",
    "requiresAttributes": [
      {
        "name": "com.amazonaws.ecs.capability.logging-driver.awslogs"
      },
      {
        "name": "ecs.capability.execution-role-awslogs"
      },
      {
        "name": "com.amazonaws.ecs.capability.docker-remote-api.1.19"
      },
      {
        "name": "com.amazonaws.ecs.capability.ecr-auth"
      },
      {
        "name": "ecs.capability.secrets.asm.environment-variables"
      },
      {
        "name": "ecs.capability.container-ordering"
      },
      {
        "name": "ecs.capability.execution-role-ecr-pull"
      },
      {
        "name": "com.amazonaws.ecs.capability.docker-remote-api.1.18"
      },
      {
        "name": "ecs.capability.task-eni"
      }
    ],
    "placementConstraints": [],
    "compatibilities": ["EC2", "FARGATE"],
    "requiresCompatibilities": ["FARGATE"],
    "cpu": "1024",
    "memory": "2048"
  }
}
