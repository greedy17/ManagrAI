# Change this to your project's node version
image: node:12.0.0

clone:
  depth: full

djangoTests: &djangoTests
  name: Django Tests
  caches:
    - pip
  image: python:3.7.3
  script:
    - pip install pipenv
    - pipenv install --system --deploy --ignore-pipfile
    - cp server/config/.env.example .env
    - cd server
    - python manage.py test
  services:
    - postgres

e2eTests: &e2eTests
  name: E2E tests
  caches:
    - node
    - npm
    - cypress
  image: cypress/base:10
  script:
    - cd client
    - npm ci
    - npm run ci

vueAppBuild: &vueAppBuild
  name: Build Vue App
  caches:
    - node
    - npm
    - cypress
  script:
    - cd client
    - npm ci
    - npm run build
  artifacts:
    - dist/**/

herokuStagingDeployment: &herokuStagingDeployment
  name: Deploy to Heroku Staging Environment
  deployment: staging
  script:
    - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git develop:master -f

pipelines:
  # Insert other test or build pipelines here as appropriate.
  # NOTE: If this is not a Vue app, then disable the 'vueAppBuild' and 'e2eTests' steps in the pipelines below.
  pull-requests:
    '**':
      - parallel:
          - step: *vueAppBuild
          - step: *e2eTests
          - step: *djangoTests
  branches:
    develop:
      - parallel:
          - step: *djangoTests
          - step: *e2eTests
      - step: *herokuStagingDeployment

definitions:
  caches:
    npm: $HOME/.npm
    cypress: $HOME/.cache/Cypress
  services:
    postgres:
      image: postgres
      environment:
        # Update the POSTGRES_USER variable to what is specified in your .env file.
        POSTGRES_DB: test_db
        POSTGRES_USER: managr
        POSTGRES_PASSWORD: test
